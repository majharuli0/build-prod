import{r as T,j as k,p as O,E as N,g as V,q as H}from"./index-DCufaEoq.js";try{let c=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},g=new c.Error().stack;g&&(c._sentryDebugIds=c._sentryDebugIds||{},c._sentryDebugIds[g]="cbabfb11-284c-4760-b888-c9d1b0097f68",c._sentryDebugIdIdentifier="sentry-dbid-cbabfb11-284c-4760-b888-c9d1b0097f68")}catch{}function q({data:c,dataType:g,color:m,chartType:S="Day",toDate:v,fromDate:w,xUnit:f="date",hourLimit:_=12,numberLimit:I=100,dataUnit:z="",chartFor:p=""}){const $=T.useMemo(()=>{if(!(c!=null&&c.length))return null;function B(e){const o=Array.from({length:67},(r,i)=>{const y=60+i*10,b=Math.floor(y/60),h=y%60;return h===0?`${b} hr`:`${b} hr ${h} min`}),t=new Array(o.length).fill(0);e==null||e.forEach(r=>{const i=Math.floor((r.sleep_total_time-60)/10);i>=0&&i<t.length&&t[i]++});const a=t.reduce((r,i)=>r+i,0),l=t.map(r=>a>0?(r/a*100).toFixed(0):"0");return{xaxis:o,data:l}}function E(e){const o=Array.from({length:10},(r,i)=>`${0+i*10}-${0+(i+1)*10}`),t=new Array(o.length).fill(0);e==null||e.forEach(r=>{const i=Math.floor(p!=="deepSleepPercentageDistribution"?(r==null?void 0:r.sleep_efficiency)/10:(r==null?void 0:r.sleep_quality)/10);i>=0&&i<t.length&&t[i]++});const a=e.length,l=t.map(r=>a>0?(r/a*100).toFixed(0):"0");return H.set(p,{xaxis:o,data:l}),{xaxis:o,data:l}}function M(e){const n=Array.from({length:6},(l,r)=>`${r*5}-${(r+1)*5}`),o=new Array(n.length).fill(0);e==null||e.forEach(l=>{const r=parseFloat(l.ahi),i=Math.floor(r/5);i>=0&&i<o.length&&o[i]++});const t=e.length,a=o.map(l=>t>0?(l/t*100).toFixed(0):"0");return{xaxis:n,data:a}}function C(e){const n=Array.from({length:12},(l,r)=>`${r*10}-${(r+1)*10}`),o=new Array(n.length).fill(0);e==null||e.forEach(l=>{const r=l.totalFallAsleepDuration,i=Math.floor(r/10);i>=0&&i<o.length&&o[i]++});const t=e.length,a=o.map(l=>t>0?(l/t*100).toFixed(0):"0");return{xaxis:n,data:a}}function R(e){const s={xaxis:Array.from({length:31},(r,i)=>i+6).map(r=>r.toString()),data:Array(31).fill(0)};let n=Array(31).fill(0);e.forEach(r=>{const i=r.data_list.filter(b=>b!=="-1"&&b!=="0").map(Number);let y=Array(31).fill(0);i.forEach(b=>{if(b>=6&&b<=36){const h=b-6;y[h]++}}),y.forEach((b,h)=>{n[h]+=b})});const o=n.map((r,i)=>r>0?i:null).filter(r=>r!==null);if(o.length===0)return s;const t=Math.max(o[0]-1,0),a=Math.min(o[o.length-1]+1,30),l=n.slice(t,a+1).reduce((r,i)=>r+i,0);return s.data=n.map((r,i)=>i>=t&&i<=a&&l>0?(r/l*100).toFixed(2):"0.00"),s}const x=["45-50","50-55","55-60","60-65","65-70","70-75","75-80","80-85","85-90","90-95","95-100","100-105","105-110","110-115","115-120"],j=e=>{const u=new Array(x.length).fill(0);e==null||e.forEach(o=>{o.data_list.forEach(t=>{if(t>0)for(let a=0;a<x.length;a++){const[l,r]=x[a].split("-").map(Number);if(t>=l&&t<r){u[a]+=1;break}}})});const s=e==null?void 0:e.reduce((o,t)=>o+t.data_list.filter(a=>a>0).length,0),n=u.map(o=>(o/s*100).toFixed(0));return{xaxis:x,data:n}},d=(()=>{if(f==="number"){if(p==="apneaIndexDistribution"){const{xaxis:e,data:u}=M(c);return e.map((s,n)=>({number:s,value:u[n]}))}else if(p==="heartRateDistribution"){const{xaxis:e,data:u}=j(c);return e.map((s,n)=>({number:s,value:u[n]}))}else if(p==="breathRateDistribution"){const{xaxis:e,data:u}=R(c);return e.map((s,n)=>({number:s,value:u[n]}))}}if(f==="hour")if(c&&c.length>0&&p==="durationDistribution"){const{xaxis:e,data:u}=B(c);return e.map((s,n)=>({hour:s,percentage:parseInt(s,10),value:u[n]}))}else if(c&&c.length>0&&p==="fallAsleepDurationDistribution"){const{xaxis:e,data:u}=C(c);return e.map((s,n)=>({hour:s,percentage:parseInt(s,10),value:u[n]}))}else return Array.from({length:_},(e,u)=>({hour:u,value:0,percentage:0}));else if(f==="percentage")if(p==="efficiencyDistribution"||p==="deepSleepPercentageDistribution"){const{xaxis:e,data:u}=E(c);return e.map((s,n)=>({percentage:s,value:u[n]}))}else{const e=Array.from({length:11},(s,n)=>n*10),u=new Map(c.map(s=>[Math.floor(s.sleep_efficiency/10)*10,{value:s.sleep_efficiency,date:s.date}]));return e.map(s=>{var n,o;return{percentage:s,value:((n=u.get(s))==null?void 0:n.value)||0,date:((o=u.get(s))==null?void 0:o.date)||null}})}else{const e=(t,a)=>{var l,r,i;switch(a){case"roomInOut":return((l=t==null?void 0:t.user_activity)==null?void 0:l.entry_room_count)||"--";case"walkingStepsStatistix":return((r=t==null?void 0:t.user_activity)==null?void 0:r.step_number)||"--";case"walkingSpeedStatistic":return((i=t==null?void 0:t.user_activity)==null?void 0:i.speed)||"--";case"sleedDurationStatistic":return t.sleep_total_time||0;case"deepSleepPercentageStatistic":return t.sleep_quality||"--";case"numberOfBedExitTime":return t.leave_bed_count||"--";default:return t.ratio||t.bed_exit_duration||t.value||t.sleep_time||t.ahi||t.anomalyHeartRate||t.sleep_efficiency||t.totalFallAsleepDuration||"--"}},u=(t,a)=>t!=null&&t.date?t.date.split("T")[0]:t!=null&&t.datestr?a==="roomInOut"||a==="walkingStepsStatistix"||a==="walkingSpeedStatistic"?V(t.datestr).subtract(1,"day").format("YYYY-MM-DD"):t.datestr:null,n=((t,a)=>{const l=[],r=new Date(t);r.setUTCHours(0,0,0,0);const i=new Date(a);for(i.setUTCHours(0,0,0,0);r<=i;)l.push(r.toISOString().split("T")[0]),r.setUTCDate(r.getUTCDate()+1);return l})(w,v),o=new Map;return c==null||c.forEach(t=>{const a=u(t,p),l=e(t,p);a&&l!==0&&l!=="--"?o.set(a,l):a&&!o.has(a)&&o.set(a,0)}),n.map(t=>({date:t,value:o.get(t)||0}))}})(),A=(e,u="axis")=>{if(f==="percentage"||g==="percentage")return`${e}%`;if(g==="duration"){const s=Math.floor(e/60),n=e%60;return s>0?`${s}h ${n}m`:`${n}m`}return e},D=e=>{if(f==="number")return e==null?void 0:e.toString();if(f==="hour")return`${e}`;if(f==="percentage")return`${e}%`;if(S==="Week"){const s=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],n=new Date(e);return s[n.getDay()]}return new Date(e).toLocaleDateString("en-US",{month:"2-digit",day:"2-digit"}).replace("/","-")};return{xAxis:{type:"category",data:d.map(e=>D(f==="hour"?e.hour:f==="percentage"?e.percentage:f==="number"?e.number:e.date))},grid:{top:"5%",left:"8%",bottom:"5%",right:"2%"},yAxis:{type:"value",axisLabel:{formatter:A},max:f==="percentage"||g==="percentage"?100:void 0},series:[{data:d.map(e=>e.value),type:"bar",barWidth:10,itemStyle:{color:m||"#000",borderRadius:[50,50,0,0]}}],tooltip:{trigger:"axis",formatter:e=>{if(f==="number")if(p!=="apneaIndexDistribution"){const n=d[e[0].dataIndex];return`<div style="margin-top: 4px">
              <span >${n.value}%</span>
              <br>
              <span style="font-weight: bold">${n.number} BPM</span>
              </div>`}else{const n=d[e[0].dataIndex];return`<div style="margin-top: 4px">
              <span style="font-weight: bold">${n.value}%</span>
              <br>
              <span style="font-weight: normal">${n.number}</span>
              </div>`}else if(f==="hour"){const n=d[e[0].dataIndex];return`<div style="margin-top: 4px">
                    ${n.value?`<span>${n.value}%</span>`:"--"}
                    <br>
                    <span style="font-weight: bold">${n.hour}</span>
                    </div>`}else if(f==="percentage"){const n=d[e[0].dataIndex];if(n.date){const o=new Date(n.date).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-");return`<div style="font-weight: bold">${n.value}%</div>
                     <div style="margin-top: 4px">${o}</div>`}return`<div style="font-weight: bold"> ${n.value}% <br/> <span style="font-weight: normal">${n.percentage}%</span></div>`}const u=d[e[0].dataIndex].date;return`<div style="font-weight: bold">${new Date(u).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-")}</div>
                  <div style="margin-top: 4px">${A(e[0].value)}${z}</div>`}}}},[c,g,m,S,w,v,f,_,I]);return!(c!=null&&c.length)||!$?k.jsxs("div",{className:"w-full h-full flex items-center justify-center",children:[" ",k.jsx(O,{description:"No data available to show"})]}):k.jsx(N,{option:$,style:{height:"350px"}})}export{q as default};
//# sourceMappingURL=barChart-DjMzX8ss.js.map
