{"version":3,"file":"index-CmEAHwS4.js","sources":["../../src/Components/ActionManu/SubscriptionUserAction.jsx","../../src/Pages/SubscribedUsers/utiles.jsx","../../src/Pages/SubscribedUsers/index.jsx"],"sourcesContent":["import { cancelSubscription } from \"@/api/subscriptions\";\r\nimport DeleteModal from \"@/Shared/delete/DeleteModal\";\r\nimport CancelSubscriptionModal from \"@/Shared/subscriptionModal/cancelSubscription\";\r\nimport { Button, Dropdown } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { HiOutlineDotsVertical } from \"react-icons/hi\";\r\n\r\nexport default function SubscriptionUserAction({ data = {} }) {\r\n  const [modalOPen, setModalOpen] = useState(false);\r\n  const handleMenuClick = (e) => {\r\n    if (e.key === \"1\") {\r\n      setModalOpen(true);\r\n    }\r\n  };\r\n  const items = [\r\n    {\r\n      label: \"Cancel Subscription\",\r\n      key: \"1\",\r\n      danger: true,\r\n    },\r\n  ];\r\n  function handleCancelSubscription(reason) {\r\n    cancelSubscription({\r\n      subscriptionId: data?.sub_id,\r\n      cancellationReason: reason,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        menu={{\r\n          items,\r\n          onClick: handleMenuClick, // attach the click handler here\r\n        }}\r\n        trigger={[\"click\"]}\r\n        placement=\"bottomRight\"\r\n      >\r\n        <Button\r\n          onClick={(e) => e.preventDefault()}\r\n          shape=\"circle\"\r\n          icon={<HiOutlineDotsVertical />}\r\n        />\r\n      </Dropdown>\r\n\r\n      <CancelSubscriptionModal\r\n        modalOpen={modalOPen}\r\n        setModalOpen={setModalOpen}\r\n        onCancelSubscription={handleCancelSubscription}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import RefundsRequestModal from \"@/Components/RefundsModal/RefundsRequestModal\";\r\nimport { Tag, Tooltip } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport AdminFiled from \"../../Shared/AdminFiled/AdminFiled\";\r\nimport { FireTwoTone, StopOutlined, SyncOutlined } from \"@ant-design/icons\";\r\nimport alipay from \"../../assets/icon/payment-method-icons/alipay.svg\";\r\nimport jcb from \"../../assets/icon/payment-method-icons/jcb.svg\";\r\nimport gpay from \"../../assets/icon/payment-method-icons/gpay.svg\";\r\nimport applepay from \"../../assets/icon/payment-method-icons/applepay.svg\";\r\nimport unionpay from \"../../assets/icon/payment-method-icons/unionpay.svg\";\r\nimport mastercard from \"../../assets/icon/payment-method-icons/mastercard.svg\";\r\nimport paypal from \"../../assets/icon/payment-method-icons/paypal.svg\";\r\nimport visa from \"../../assets/icon/payment-method-icons/visa.svg\";\r\nimport SubscriptionUserAction from \"../../Components/ActionManu/SubscriptionUserAction\";\r\nimport { convertUnixToReadableDate, formatCreatedAt } from \"../../utils/helper\";\r\nimport SubDetails from \"../../Components/ActionManu/SubDetails\";\r\n\r\nconst TransactionIdColumn = ({ transactionId }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(transactionId);\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000); // Reset after 2 seconds\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={copied ? \"Copied!\" : \"Click to copy\"}>\r\n      <span\r\n        className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap cursor-pointer\"\r\n        onClick={handleCopy}\r\n      >\r\n        {transactionId}\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n};\r\nexport const refundRequestColumns = [\r\n  {\r\n    title: \"User\",\r\n    render: (row) => <AdminFiled data={row} />,\r\n  },\r\n  {\r\n    title: \"Subscription ID\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        sub_45asd452rf45rasd\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription Plan\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          <FireTwoTone /> AI Monitoring\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Recurring Money\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          $ 69 USD\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Subscription Expire Date\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          1 July, 2026\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription Status\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5; // 50% chance\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n            {isActive ? (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"success\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Active\r\n              </Tag>\r\n            ) : (\r\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\r\n                Canceled\r\n              </Tag>\r\n            )}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Default Payment Method\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5; // 50% chance\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex items-center gap-1\">\r\n            <img src={visa} alt=\"\" /> **** 3456\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n\r\n  {\r\n    title: \"Action\",\r\n    render: (row) => {\r\n      return (\r\n        <button>\r\n          <SubscriptionUserAction />\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n];\r\nexport const subcriptionColumns = [\r\n  {\r\n    title: \"Subscription Created At\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        {formatCreatedAt(row?.created_at) || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"User \",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        {row?.StripeEventData?.metadata?.user_email || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription ID\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        {row?.StripeEventData?.id || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Product ID\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          {row?.StripeEventData?.plan?.product || \"N/A\"}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap uppercase\">\r\n          ${row?.real_amount_decimal / 100 || 0} {row?.currency || \"USD\"}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Subscription Expire Date\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          {convertUnixToReadableDate(\r\n            row?.StripeEventData?.current_period_end\r\n          ) || \"N/A\"}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription Status\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5; // 50% chance\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n            {/* {isActive ? (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"success\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Active\r\n              </Tag>\r\n            ) : (\r\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\r\n                Canceled\r\n              </Tag>\r\n            )} */}\r\n            {row?.SubscriptionStatus === \"cancelled\" && (\r\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\r\n                Canceled\r\n              </Tag>\r\n            )}\r\n            {row?.SubscriptionStatus === \"active\" && (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"success\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Active\r\n              </Tag>\r\n            )}\r\n            {row?.SubscriptionStatus === \"trialing\" && (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"warning\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Trialing\r\n              </Tag>\r\n            )}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Details\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5;\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex items-center gap-1\">\r\n            <SubDetails data={row} />\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    render: (row) => {\r\n      return (\r\n        <button>\r\n          <SubscriptionUserAction data={row} />\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n];\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { refundRequestColumns, subcriptionColumns } from \"./utiles\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { getOrders } from \"@/api/ordersManage\";\r\nimport { fetchUsers } from \"../../redux/features/users/usersSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Input, Select } from \"antd\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { getSubscriptions } from \"../../api/subscriptions\";\r\n\r\nexport default function SubscribedUsers() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, SetPage] = useState({});\r\n  const [total, setTotal] = useState(0);\r\n  const [subscribedUsers, setSubscribedUsers] = useState([]);\r\n  const getSubscriptionsList = useCallback(() => {\r\n    setLoading(true);\r\n    getSubscriptions(page)\r\n      .then((res) => {\r\n        setSubscribedUsers(res?.data);\r\n        setTotal(res?.total);\r\n      })\r\n      .then((err) => {\r\n        console.error(\"Error fetching subscriptions:\", err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [page]);\r\n  useEffect(() => {\r\n    getSubscriptionsList();\r\n  }, [getSubscriptionsList]);\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"refunds_request\"\r\n        className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6 mt-6\"\r\n      >\r\n        <div\r\n          id=\"Recently_Closed_Alerts_Header\"\r\n          className=\"w-full flex justify-between\"\r\n        >\r\n          <h2 className=\" text-2xl font-bold text-text-primary\">\r\n            All Subscribed User\r\n          </h2>\r\n          {/* \r\n          <Input\r\n            size=\"large\"\r\n            placeholder=\"Customer name, email...\"\r\n            prefix={<FiSearch className=\"text-gray-400\" />}\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            className=\" pr-20 border border-gray-300 max-w-[300px]\"\r\n            style={{ boxShadow: \"none\" }}\r\n          />\r\n          <Select\r\n            defaultValue=\"All\"\r\n            style={{ width: 150 }}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n            options={[\r\n              { value: \"All\", label: \"All Status\" },\r\n              { value: \"Active\", label: \"Active\" },\r\n              { value: \"Canceled\", label: \"Canceled\" },\r\n            ]}\r\n          /> */}\r\n        </div>\r\n        <SidebarContext.Provider\r\n          value={{\r\n            total: total,\r\n            page,\r\n            SetPage,\r\n            getList: getSubscriptionsList,\r\n          }}\r\n        >\r\n          <CustomTable\r\n            loading={loading}\r\n            columns={subcriptionColumns}\r\n            tableData={subscribedUsers}\r\n            showPagination={false}\r\n          />\r\n        </SidebarContext.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["SubscriptionUserAction","data","modalOPen","setModalOpen","useState","handleMenuClick","e","items","handleCancelSubscription","reason","cancelSubscription","res","err","jsx","Dropdown","Button","HiOutlineDotsVertical","CancelSubscriptionModal","subcriptionColumns","row","formatCreatedAt","_b","_a","jsxs","convertUnixToReadableDate","Tag","StopOutlined","SyncOutlined","SubDetails","SubscribedUsers","loading","setLoading","page","SetPage","total","setTotal","subscribedUsers","setSubscribedUsers","getSubscriptionsList","useCallback","getSubscriptions","useEffect","Fragment","SidebarContext","CustomTable"],"mappings":"slBAOA,SAAwBA,EAAuB,CAAE,KAAAC,EAAO,CAAA,GAAM,CAC5D,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1CC,EAAmBC,GAAM,CACzBA,EAAE,MAAQ,KACZH,EAAa,EAAI,CAErB,EACMI,EAAQ,CACZ,CACE,MAAO,sBACP,IAAK,IACL,OAAQ,EAAA,CACV,EAEF,SAASC,EAAyBC,EAAQ,CACxCC,EAAmB,CACjB,eAAgBT,GAAA,YAAAA,EAAM,OACtB,mBAAoBQ,CAAA,CACrB,EACE,KAAME,GAAQ,CACb,QAAQ,IAAIA,CAAG,CACjB,CAAC,EACA,MAAOC,GAAQ,CACd,QAAQ,IAAIA,CAAG,CACjB,CAAC,CACL,CACA,cACG,MAAA,CACC,SAAA,CAAAC,EAAAA,IAACC,EAAA,CACC,KAAM,CACJ,MAAAP,EACA,QAASF,CAAA,EAEX,QAAS,CAAC,OAAO,EACjB,UAAU,cAEV,SAAAQ,EAAAA,IAACE,EAAA,CACC,QAAUT,GAAMA,EAAE,eAAA,EAClB,MAAM,SACN,WAAOU,EAAA,CAAA,CAAsB,CAAA,CAAA,CAC/B,CAAA,EAGFH,EAAAA,IAACI,EAAA,CACC,UAAWf,EACX,aAAAC,EACA,qBAAsBK,CAAA,CAAA,CACxB,EACF,CAEJ,CC0EO,MAAMU,EAAqB,CAChC,CACE,MAAO,0BACP,OAASC,GACPN,MAAC,OAAA,CAAK,UAAU,yEACb,SAAAO,EAAgBD,GAAA,YAAAA,EAAK,UAAU,GAAK,KAAA,CACvC,CAAA,EAGJ,CACE,MAAO,QACP,OAASA,GAAA,SACPN,OAAAA,MAAC,OAAA,CAAK,UAAU,yEACb,WAAAQ,GAAAC,EAAAH,GAAA,YAAAA,EAAK,kBAAL,YAAAG,EAAsB,WAAtB,YAAAD,EAAgC,aAAc,KAAA,CACjD,EAAA,EAGJ,CACE,MAAO,kBACP,OAASF,UACPN,OAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,yEACb,WAAAS,EAAAH,GAAA,YAAAA,EAAK,kBAAL,YAAAG,EAAsB,KAAM,KAAA,CAC/B,EAAA,EAIJ,CACE,MAAO,aACP,OAASH,YACPN,OAAAA,EAAAA,IAAC,UACC,SAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,yEACb,WAAAQ,GAAAC,EAAAH,GAAA,YAAAA,EAAK,kBAAL,YAAAG,EAAsB,OAAtB,YAAAD,EAA4B,UAAW,MAC1C,CAAA,CACF,EAAA,EAGJ,CACE,MAAO,SACP,OAASF,GACPN,EAAAA,IAAC,UACC,SAAAU,EAAAA,KAAC,OAAA,CAAK,UAAU,mFAAmF,SAAA,CAAA,KAC/FJ,GAAA,YAAAA,EAAK,qBAAsB,KAAO,EAAE,KAAEA,GAAA,YAAAA,EAAK,WAAY,KAAA,CAAA,CAC3D,CAAA,CACF,CAAA,EAIJ,CACE,MAAO,2BACP,OAASA,UACPN,OAAAA,EAAAA,IAAC,UACC,SAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,yEACb,SAAAW,GACCF,EAAAH,GAAA,YAAAA,EAAK,kBAAL,YAAAG,EAAsB,kBAAA,GACnB,MACP,CAAA,CACF,EAAA,EAGJ,CACE,MAAO,sBACP,OAASH,GAGLN,EAAAA,IAAC,SAAA,CACC,SAAAU,EAAAA,KAAC,OAAA,CAAK,UAAU,2DAcb,SAAA,EAAAJ,GAAA,YAAAA,EAAK,sBAAuB,aAC3BN,EAAAA,IAACY,EAAA,CAAI,WAAOC,EAAA,CAAA,CAAa,EAAI,UAAU,gBAAgB,SAAA,UAAA,CAEvD,GAEDP,GAAA,YAAAA,EAAK,sBAAuB,UAC3BN,EAAAA,IAACY,EAAA,CACC,KAAMZ,EAAAA,IAACc,EAAA,CAAa,KAAI,EAAA,CAAC,EACzB,MAAM,UACN,UAAU,gBACX,SAAA,QAAA,CAAA,GAIFR,GAAA,YAAAA,EAAK,sBAAuB,YAC3BN,EAAAA,IAACY,EAAA,CACC,KAAMZ,EAAAA,IAACc,EAAA,CAAa,KAAI,EAAA,CAAC,EACzB,MAAM,UACN,UAAU,gBACX,SAAA,UAAA,CAAA,CAED,CAAA,CAEJ,CAAA,CACF,CAEJ,EAEF,CACE,MAAO,UACP,OAASR,GAGLN,EAAAA,IAAC,SAAA,CACC,SAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,mFACd,SAAAA,EAAAA,IAACe,EAAA,CAAW,KAAMT,CAAA,CAAK,CAAA,CACzB,EACF,CAEJ,EAEF,CACE,MAAO,SACP,OAASA,SAEJ,SAAA,CACC,SAAAN,EAAAA,IAACb,EAAA,CAAuB,KAAMmB,EAAK,EACrC,CAEJ,CAEJ,EC1PA,SAAwBU,GAAkB,CACxC,KAAM,CAACC,EAASC,CAAU,EAAI3B,EAAAA,SAAS,EAAI,EACrC,CAAC4B,EAAMC,CAAO,EAAI7B,EAAAA,SAAS,CAAA,CAAE,EAC7B,CAAC8B,EAAOC,CAAQ,EAAI/B,EAAAA,SAAS,CAAC,EAC9B,CAACgC,EAAiBC,CAAkB,EAAIjC,EAAAA,SAAS,CAAA,CAAE,EACnDkC,EAAuBC,EAAAA,YAAY,IAAM,CAC7CR,EAAW,EAAI,EACfS,EAAiBR,CAAI,EAClB,KAAMrB,GAAQ,CACb0B,EAAmB1B,GAAA,YAAAA,EAAK,IAAI,EAC5BwB,EAASxB,GAAA,YAAAA,EAAK,KAAK,CACrB,CAAC,EACA,KAAMC,GAAQ,CACb,QAAQ,MAAM,gCAAiCA,CAAG,CACpD,CAAC,EACA,QAAQ,IAAM,CACbmB,EAAW,EAAK,CAClB,CAAC,CACL,EAAG,CAACC,CAAI,CAAC,EACTS,OAAAA,EAAAA,UAAU,IAAM,CACdH,EAAA,CACF,EAAG,CAACA,CAAoB,CAAC,EAEvBzB,MAAA6B,EAAAA,SAAA,CACE,SAAAnB,EAAAA,KAAC,MAAA,CACC,GAAG,kBACH,UAAU,uFAEV,SAAA,CAAAV,EAAAA,IAAC,MAAA,CACC,GAAG,gCACH,UAAU,8BAEV,SAAAA,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,qBAAA,CAEtD,CAAA,CAAA,EAuBFA,EAAAA,IAAC8B,EAAe,SAAf,CACC,MAAO,CACL,MAAAT,EACA,KAAAF,EACA,QAAAC,EACA,QAASK,CAAA,EAGX,SAAAzB,EAAAA,IAAC+B,EAAA,CACC,QAAAd,EACA,QAASZ,EACT,UAAWkB,EACX,eAAgB,EAAA,CAAA,CAClB,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ"}